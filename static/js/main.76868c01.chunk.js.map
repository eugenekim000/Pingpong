{"version":3,"sources":["HelperFunctions/index.js","Components/MainGame.js","Components/EndScreen.js","App.js","index.js"],"names":["timeout","ms","Promise","resolve","setTimeout","handleAudio","audio","playPromise","play","undefined","then","_","catch","err","console","info","timeouts","MainGame","props","handleGameOver","useState","score","setScore","returned","setReturned","playerSwing","setSwing","garden","useRef","ball","maxX","clientWidth","maxY","clientHeight","handleOrientation","event","x","beta","y","gamma","style","top","left","window","addEventListener","Audio","useEffect","checkIfReturned","push","log","handleClick","clearTimeout","length","pop","handleClearingTimeout","prevState","handleRobot","a","returnTime","Math","round","random","onClick","e","ref","class","EndScreen","handleRestart","App","gameStart","setGame","gameEnd","setEnd","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAaA,EAAU,SAACC,GACvB,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,OAOxCI,EAAc,SAACC,GAC3B,IAAMC,EAAcD,EAAME,YACNC,IAAhBF,GACHA,EACEG,MAAK,SAACC,OAGNC,OAAM,SAACC,GACPC,QAAQC,KAAKF,OCbbG,EAAW,GAEA,SAASC,EAASC,GAAQ,IAChCC,EAAmBD,EAAnBC,eAD+B,EAEbC,mBAAS,GAFI,mBAEhCC,EAFgC,KAEzBC,EAFyB,OAGPF,oBAAS,GAHF,mBAGhCG,EAHgC,KAGtBC,EAHsB,OAIPJ,oBAAS,GAJF,mBAIhCK,EAJgC,KAInBC,EAJmB,KAMjCC,EAASC,iBAAO,MAChBC,EAAOD,iBAAO,MAEhBE,EAAOH,EAAOI,YAAcF,EAAKE,YACjCC,EAAOL,EAAOM,aAAeJ,EAAKI,aAGtC,SAASC,EAAkBC,GAC1B,IAAIC,EAAID,EAAME,KACVC,EAAIH,EAAMI,MACVH,EAAI,KACPA,EAAI,IAEDA,GAAK,KACRA,GAAK,IAENA,GAAK,GACLE,GAAK,GACLT,EAAKW,MAAMC,IAAOT,EAAOM,EAAK,IAAM,GAAK,KACzCT,EAAKW,MAAME,KAAQZ,EAAOM,EAAK,IAAM,GAAK,KAb3CO,OAAOC,iBAAiB,oBAAqBV,GAAmB,GAgB1C,IAAIW,MAAM,+BACV,IAAIA,MAAM,+BAEhCC,qBAAU,WACTC,MACE,CAACxB,IAEJ,IAAMwB,EAAkB,WACvB/B,EAASgC,KACR5C,YAAW,YACO,IAAbmB,IACHT,QAAQmC,IAAI,oBACZ9B,OAEC,OASC+B,EAAc,YALU,SAAClC,GAC9BmC,aAAanC,EAASA,EAASoC,OAAS,IACxCpC,EAASqC,MAITC,CAAsBtC,GAGtBM,GAAS,SAACiC,GAAD,OAAeA,EAAY,KACpC7B,GAAS,SAAC6B,GAAD,OAAgBA,KACzB/B,GAAY,kBAAM,KAClBgC,KAGKA,EAAW,uCAAG,4BAAAC,EAAA,6DACbC,ED9DAC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,IC6DrB,SAEb7D,EAAQ0D,GAFK,OAGnBlC,GAAY,SAAC+B,GAAD,OAAgBA,KAC5B7B,GAAS,SAAC6B,GAAD,OAAgBA,KAJN,2CAAH,qDAOjB,OACC,6BACC,6BAAMlC,GACLI,GAAe,4BAAQqC,QAAS,kBAAMZ,MAAvB,YAGhB,4BAAQY,QAAS,SAACC,GAAD,OAAOjD,QAAQmC,IAAIf,OAApC,QACA,yBAAK8B,IAAKrC,EAAQsC,MAAM,UACvB,yBAAKD,IAAKnC,EAAMoC,MAAM,WC/EX,SAASC,EAAUhD,GAAQ,IACjCiD,EAAkBjD,EAAlBiD,cACR,OACC,6BACC,0CACA,4BAAQL,QAAS,kBAAMK,MAAvB,YCiCYC,MAlCf,WACuB,IAAIvB,MAAM,2BAAhC,IADc,EAGezB,oBAAS,GAHxB,mBAGPiD,EAHO,KAGIC,EAHJ,OAIYlD,oBAAS,GAJrB,mBAIPmD,EAJO,KAIEC,EAJF,KAqBd,OACC,yBAAKC,UAAU,OACd,6BACC,4BAAQX,QAAS,WAjBnBQ,GAASD,KAiBP,eAEAA,GACA,kBAACpD,EAAD,CAAUE,eAjBb,WACCmD,GAAQ,SAACf,GAAD,OAAgBA,KACxBiB,GAAO,SAACjB,GAAD,OAAgBA,MAeqBlD,YAAaA,IAEvDkE,GAAW,kBAACL,EAAD,CAAWC,cAbzB,WACCG,GAAQ,SAACf,GAAD,OAAgBA,KACxBiB,GAAO,SAACjB,GAAD,OAAgBA,UCnBzBmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.76868c01.chunk.js","sourcesContent":["export const timeout = (ms) => {\n\treturn new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nexport const generateRobotReturnTime = () => {\n\treturn Math.round(Math.random() * 200) + 600;\n};\n\nexport const handleAudio = (audio) => {\n\tconst playPromise = audio.play();\n\tif (playPromise !== undefined) {\n\t\tplayPromise\n\t\t\t.then((_) => {\n\t\t\t\t// autoplay started\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.info(err);\n\t\t\t});\n\t}\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { timeout, generateRobotReturnTime } from '../HelperFunctions';\n\nlet timeouts = [];\n\nexport default function MainGame(props) {\n\tconst { handleGameOver } = props;\n\tconst [score, setScore] = useState(0);\n\tconst [returned, setReturned] = useState(true);\n\tconst [playerSwing, setSwing] = useState(true);\n\n\tconst garden = useRef(null);\n\tconst ball = useRef(null);\n\n\tvar maxX = garden.clientWidth - ball.clientWidth;\n\tvar maxY = garden.clientHeight - ball.clientHeight;\n\n\twindow.addEventListener('deviceorientation', handleOrientation, true);\n\tfunction handleOrientation(event) {\n\t\tlet x = event.beta;\n\t\tlet y = event.gamma;\n\t\tif (x > 90) {\n\t\t\tx = 90;\n\t\t}\n\t\tif (x < -90) {\n\t\t\tx = -90;\n\t\t}\n\t\tx += 90;\n\t\ty += 90;\n\t\tball.style.top = (maxY * y) / 180 - 10 + 'px';\n\t\tball.style.left = (maxX * x) / 180 - 10 + 'px';\n\t}\n\n\tconst incomingAudio = new Audio('../public/ball-incoming.mp3');\n\tconst outgoingAudio = new Audio('../public/ball-outgoing.mp3');\n\n\tuseEffect(() => {\n\t\tcheckIfReturned();\n\t}, [returned]);\n\n\tconst checkIfReturned = () => {\n\t\ttimeouts.push(\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (returned === false) {\n\t\t\t\t\tconsole.log('failed to return');\n\t\t\t\t\thandleGameOver();\n\t\t\t\t}\n\t\t\t}, 2000)\n\t\t);\n\t};\n\n\tconst handleClearingTimeout = (timeouts) => {\n\t\tclearTimeout(timeouts[timeouts.length - 1]);\n\t\ttimeouts.pop();\n\t};\n\n\tconst handleClick = () => {\n\t\thandleClearingTimeout(timeouts);\n\t\t//handleAudio(outgoingAudio);\n\n\t\tsetScore((prevState) => prevState + 1);\n\t\tsetSwing((prevState) => !prevState);\n\t\tsetReturned(() => true);\n\t\thandleRobot();\n\t};\n\n\tconst handleRobot = async () => {\n\t\tconst returnTime = generateRobotReturnTime();\n\t\tawait timeout(returnTime);\n\t\tsetReturned((prevState) => !prevState);\n\t\tsetSwing((prevState) => !prevState);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div>{score}</div>\n\t\t\t{playerSwing && <button onClick={() => handleClick()}>Click me</button>}\n\t\t\t{/* \t\t\t{<button onClick={() => handleAudio(outgoingAudio)}>test sound</button>}\n\t\t\t */}\n\t\t\t<button onClick={(e) => console.log(handleOrientation())}>test</button>\n\t\t\t<div ref={garden} class='garden'>\n\t\t\t\t<div ref={ball} class='ball'></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import React from 'react';\n\nexport default function EndScreen(props) {\n\tconst { handleRestart } = props;\n\treturn (\n\t\t<div>\n\t\t\t<div>Game Over</div>\n\t\t\t<button onClick={() => handleRestart()}>Restart</button>\n\t\t</div>\n\t);\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport MainGame from './Components/MainGame';\nimport EndScreen from './Components/EndScreen';\nimport { handleAudio } from './HelperFunctions';\n\nfunction App() {\n\tconst gameOverAudio = new Audio('../public/game-over.mp3');\n\n\tconst [gameStart, setGame] = useState(true);\n\tconst [gameEnd, setEnd] = useState(false);\n\n\tfunction handleStart() {\n\t\tsetGame(!gameStart);\n\t}\n\n\tfunction handleGameOver() {\n\t\tsetGame((prevState) => !prevState);\n\t\tsetEnd((prevState) => !prevState);\n\t\t//handleAudio(gameOverAudio);\n\t}\n\n\tfunction handleRestart() {\n\t\tsetGame((prevState) => !prevState);\n\t\tsetEnd((prevState) => !prevState);\n\t}\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<div>\n\t\t\t\t<button onClick={() => handleStart()}>Game Start</button>\n\t\t\t</div>\n\t\t\t{gameStart && (\n\t\t\t\t<MainGame handleGameOver={handleGameOver} handleAudio={handleAudio} />\n\t\t\t)}\n\t\t\t{gameEnd && <EndScreen handleRestart={handleRestart} />}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}